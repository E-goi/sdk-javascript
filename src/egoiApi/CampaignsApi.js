/**
 * APIv3 (Beta)
 *  # Introduction Just a quick peek!!! This is our new version of API. Remember, it is not stable yet!!! But we invite you play with it and give us your feedback ;) # Getting Started  E-goi can be integrated with many environments and programming languages via our REST API. We've created a developer focused portal to give your organization a clear and quick overview of how to integrate with E-goi. The developer portal focuses on scenarios for integration and flow of events. We recommend familiarizing yourself with all of the content in the developer portal, before start using our rest API.   The E-goi  APIv3 is served over HTTPS. To ensure data privacy, unencrypted HTTP is not supported.  Request data is passed to the API by POSTing JSON objects to the API endpoints with the appropriate parameters.   BaseURL = api.egoiapp.com  # RESTful Services This API supports 5 HTTP methods:  * <b>GET</b>: The HTTP GET method is used to **read** (or retrieve) a representation of a resource. * <b>POST</b>: The POST verb is most-often utilized to **create** new resources. * <b>PATCH</b>: PATCH is used for **modify** capabilities. The PATCH request only needs to contain the changes to the resource, not the complete resource * <b>PUT</b>: PUT is most-often utilized for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource. * <b>DELETE</b>: DELETE is pretty easy to understand. It is used to **delete** a resource identified by a URI.  # Authentication   We use a custom authentication method, you will need a apikey that you can find in your account settings. Below you will see a curl example to get your account information:  #!/bin/bash  curl -X GET 'https://api.egoiapp.com/my-account' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>'  Here you can see a curl Post example with authentication:  #!/bin/bash  curl -X POST 'http://api.egoiapp.com/tags' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>' \\  -H 'Content-Type: application/json' \\  -d '{`name`:`Your custom tag`,`color`:`#FFFFFF`}'  # SDK Get started quickly with E-goi with our integration tools. Our SDK is a modern open source library that makes it easy to integrate your application with E-goi services. * <b><a href='https://github.com/E-goi/sdk-java'>Java</a></b> * <b><a href='https://github.com/E-goi/sdk-php'>PHP</a></b> * <b><a href='https://github.com/E-goi/sdk-python'>Python</a></b>  <security-definitions/>
 *
 * OpenAPI spec version: 3.0.0-beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.3.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'egoiSdk/CampaignsCollection', 'egoiSdk/DeleteCampaignsConflict', 'egoiSdk/Forbidden', 'egoiSdk/InternalServerError', 'egoiSdk/NotFound', 'egoiSdk/Unauthorized', 'egoiSdk/UnprocessableEntity'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../egoiSdk/CampaignsCollection'), require('../egoiSdk/DeleteCampaignsConflict'), require('../egoiSdk/Forbidden'), require('../egoiSdk/InternalServerError'), require('../egoiSdk/NotFound'), require('../egoiSdk/Unauthorized'), require('../egoiSdk/UnprocessableEntity'));
  } else {
    // Browser globals (root is window)
    if (!root.egoiSdk) {
      root.egoiSdk = {};
    }
    root.egoiSdk.CampaignsApi = factory(root.egoiSdk.ApiClient, root.egoiSdk.CampaignsCollection, root.egoiSdk.DeleteCampaignsConflict, root.egoiSdk.Forbidden, root.egoiSdk.InternalServerError, root.egoiSdk.NotFound, root.egoiSdk.Unauthorized, root.egoiSdk.UnprocessableEntity);
  }
}(this, function(ApiClient, CampaignsCollection, DeleteCampaignsConflict, Forbidden, InternalServerError, NotFound, Unauthorized, UnprocessableEntity) {
  'use strict';

  /**
   * Campaigns service.
   * @module egoiApi/CampaignsApi
   * @version 1.0.0RC1
   */

  /**
   * Constructs a new CampaignsApi. 
   * @alias module:egoiApi/CampaignsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the deleteCampaigns operation.
     * @callback module:egoiApi/CampaignsApi~deleteCampaignsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove Campaign
     * Remove campaign information given its ID
     * @param {String} campaignHash ID of the Campaign
     * @param {module:egoiApi/CampaignsApi~deleteCampaignsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteCampaigns = function(campaignHash, callback) {
      var postBody = null;

      // verify the required parameter 'campaignHash' is set
      if (campaignHash === undefined || campaignHash === null) {
        throw new Error("Missing the required parameter 'campaignHash' when calling deleteCampaigns");
      }


      var pathParams = {
        'campaign_hash': campaignHash
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Apikey'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/campaigns/{campaign_hash}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllCampaigns operation.
     * @callback module:egoiApi/CampaignsApi~getAllCampaignsCallback
     * @param {String} error Error message, if any.
     * @param {module:egoiSdk/CampaignsCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all Campaigns
     * Returns all campaigns
     * @param {Object} opts Optional parameters
     * @param {module:egoiSdk/String} opts.channel Channel of the campaign
     * @param {String} opts.campaignHash Hash of the campaign
     * @param {Number} opts.listId ID of the list where the campaign belongs
     * @param {module:egoiSdk/String} opts.status Status of the campaign
     * @param {String} opts.internalName Internal name of the campaign
     * @param {Number} opts.createdBy ID of the user who created the campaign
     * @param {Number} opts.groupId ID of the group where the campaign belongs
     * @param {Date} opts.createdMin Created initial date
     * @param {Date} opts.createdMax Created finish
     * @param {Date} opts.updatedMin Updated initial
     * @param {Date} opts.updatedMax Updated finish
     * @param {Date} opts.startDateMin Start date initial
     * @param {Date} opts.startDateMax Start date finish
     * @param {Date} opts.endDateMin End Date initial
     * @param {Date} opts.endDateMax End Date finish
     * @param {Date} opts.scheduleDateMin Schedule Date initial
     * @param {Date} opts.scheduleDateMax Schedule Date finish
     * @param {Number} opts.offset Element offset (starting at zero for the first element)
     * @param {Number} opts.limit Number of items to return (default to 10)
     * @param {module:egoiSdk/String} opts.order Type of order (default to &#39;desc&#39;)
     * @param {module:egoiSdk/String} opts.orderBy Reference attribute to order campaigns (default to &#39;created&#39;)
     * @param {module:egoiApi/CampaignsApi~getAllCampaignsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:egoiSdk/CampaignsCollection}
     */
    this.getAllCampaigns = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'channel': opts['channel'],
        'campaign_hash': opts['campaignHash'],
        'list_id': opts['listId'],
        'status': opts['status'],
        'internal_name': opts['internalName'],
        'created_by': opts['createdBy'],
        'group_id': opts['groupId'],
        'created_min': opts['createdMin'],
        'created_max': opts['createdMax'],
        'updated_min': opts['updatedMin'],
        'updated_max': opts['updatedMax'],
        'start_date_min': opts['startDateMin'],
        'start_date_max': opts['startDateMax'],
        'end_date_min': opts['endDateMin'],
        'end_date_max': opts['endDateMax'],
        'schedule_date_min': opts['scheduleDateMin'],
        'schedule_date_max': opts['scheduleDateMax'],
        'offset': opts['offset'],
        'limit': opts['limit'],
        'order': opts['order'],
        'order_by': opts['orderBy'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['Apikey'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = CampaignsCollection;

      return this.apiClient.callApi(
        '/campaigns', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
